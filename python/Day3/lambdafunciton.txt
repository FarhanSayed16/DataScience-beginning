What is a Lambda Function?
--------------------------
A lambda function in Python is a small, anonymous function defined using the `lambda` keyword. It can have any number of arguments but only one expression. Lambda functions are often used for short, simple operations where a full function definition is not needed.

Syntax:
-------
lambda arguments: expression

Example:
--------
# Adds 10 to the input value
add_ten = lambda x: x + 10
print(add_ten(5))  # Output: 15

# Lambda function with two arguments
multiply = lambda x, y: x * y
print(multiply(3, 4))  # Output: 12

# Using lambda with map()
numbers = [1, 2, 3, 4]
squared = list(map(lambda x: x**2, numbers))
print(squared)  # Output: [1, 4, 9, 16]

Confidence Interval Concept
--------------------------
A confidence interval is a range of values, derived from sample data, that is likely to contain the true population parameter (such as the mean) with a certain level of confidence (commonly 95%). It provides an estimated range believed to include the parameter, giving an idea of the uncertainty around the estimate.

For example, a 95% confidence interval for the mean tells us that if we took many samples and built a confidence interval from each, about 95% of those intervals would contain the true mean.

Example (using Python and scipy):
---------------------------------
import numpy as np
from scipy import stats

data = [10, 12, 13, 15, 18, 20, 21]
mean = np.mean(data)
conf_int = stats.t.interval(0.95, len(data)-1, loc=mean, scale=stats.sem(data))
print("Mean:", mean)
print("95% Confidence Interval:", conf_int)